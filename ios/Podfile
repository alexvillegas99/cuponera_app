platform :ios, '16.0'          # puedes bajar a 13/12 si necesitas soportar más

ENV['COCOAPODS_DISABLE_STATS'] = 'true'

project 'Runner', {
  'Debug' => :debug,
  'Profile' => :release,
  'Release' => :release,
}

def flutter_root
  generated_xcode_build_settings_path = File.expand_path(File.join('..', 'Flutter', 'Generated.xcconfig'), __FILE__)
  unless File.exist?(generated_xcode_build_settings_path)
    raise "#{generated_xcode_build_settings_path} must exist. If you're running pod install manually, make sure flutter pub get is executed first"
  end

  File.foreach(generated_xcode_build_settings_path) do |line|
    matches = line.match(/FLUTTER_ROOT\=(.*)/)
    return matches[1].strip if matches
  end
  raise "FLUTTER_ROOT not found in #{generated_xcode_build_settings_path}. Try deleting Generated.xcconfig, then run flutter pub get"
end

require File.expand_path(File.join('packages', 'flutter_tools', 'bin', 'podhelper'), flutter_root)

flutter_ios_podfile_setup

target 'Runner' do
  # ❌ NO uses frameworks dinámicos:
  # use_frameworks!

  # ✅ Usa frameworks ESTÁTICOS (lo más compatible con Flutter/Firebase):
  use_frameworks! :linkage => :static
  # opcional si lo piden algunos pods:
  # use_modular_headers!

  flutter_install_all_ios_pods File.dirname(File.realpath(__FILE__))

  target 'RunnerTests' do
    inherit! :search_paths
  end
end

post_install do |installer|
  installer.pods_project.targets.each do |target|
    flutter_additional_ios_build_settings(target)
    target.build_configurations.each do |config|
      # Asegura que se carguen categorías ObjC (evita undefined symbols tipo GTMLogger)
      config.build_settings['OTHER_LDFLAGS'] = '$(inherited) -ObjC'
      # Asegura versión Swift si falta (Xcode 15)
      config.build_settings['SWIFT_VERSION'] ||= '5.0'
    end
  end
end
